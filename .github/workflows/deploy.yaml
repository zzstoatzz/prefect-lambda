name: Deploy to AWS Lambda

on:
  release:
    types: [released, prereleased]
  workflow_dispatch:

env:
  LAMBDA_FUNCTION_NAME: demo
  LAMBDA_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role

jobs:
    deploy-to-lambda:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build, Tag, Push Docker Image
              env:
                REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                REPOSITORY: demo
                IMAGE_TAG: ${{ github.sha }}
              run: |
                docker build \
                --platform linux/amd64 \
                --tag $REGISTRY/$REPOSITORY:$IMAGE_TAG \
                --tag $REGISTRY/$REPOSITORY:latest \
                .

                docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

            - name: Create or Update ECR Repository
              run: |
                aws ecr describe-repositories --repository-names demo || aws ecr create-repository --repository-name demo
        
            - name: Create or Update Lambda Function
              env:
                IMAGE_TAG: ${{ steps.login-ecr.outputs.registry }}/demo
                PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
                PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
              run: |
                aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME && \
                aws lambda update-function-configuration \
                  --environment Variables="{PREFECT_API_KEY=$PREFECT_API_KEY,PREFECT_API_URL=$PREFECT_API_URL}" && \
                aws lambda update-function-code \
                  --function-name $LAMBDA_FUNCTION_NAME \
                  --image-uri $IMAGE_TAG:${{ github.sha }} || \
                aws lambda create-function \
                  --function-name $LAMBDA_FUNCTION_NAME \
                  --package-type Image \
                  --code ImageUri=$IMAGE_TAG:${{ github.sha }} \
                  --role $LAMBDA_ROLE \
                  --environment Variables="{PREFECT_API_KEY=$PREFECT_API_KEY,PREFECT_API_URL=$PREFECT_API_URL}" \
                  --timeout 30
